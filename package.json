{
  "name": "repeka",
  "version": "0.0.0",
  "description": "RePeKa",
  "license": "UNLICENSED",
  "private": true,
  "dependencies": {},
  "devDependencies": {
    "chalk": "1.1.3",
    "git-describe": "3.0.2",
    "node-composer-runner": "0.2.0"
  },
  "scripts": {
    "help": "node scripts/help.js",
    "check": "npm run -s lint && npm run -s test",
    "clean": "npm run -s clean:backend & npm run -s clean:admin",
    "clean:backend": "npm run -s clean:backend:cache && php bin/console cache:clear -e dev",
    "clean:backend:cache": "rm -fr var/cache/prod && rm -fr var/cache/dev",
    "clean:backend:sessions": "rm -fr var/sessions/prod && rm -fr var/sessions/dev",
    "clean:admin": "cd src/AdminPanel && npm run -s clean",
    "db:create": "php bin/console doctrine:database:create --if-not-exists --no-interaction",
    "db:fixture": "php bin/console doctrine:database:drop -e dev --force --if-exists && npm run -s db:migrate && php bin/console doctrine:fixtures:load -e dev -n",
    "db:migrate": "npm run -s db:create && php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration",
    "db:diff": "php bin/console doctrine:migrations:diff",
    "dist": "node scripts/repeka.js && node scripts/version-public.js && (npm run dist:backend & npm run dist:admin) && php bin/console statsd:deploy",
    "dist:backend": "composer-runner -- install --optimize-autoloader --no-dev && npm run -s clean:backend:cache && php bin/console cache:clear -e prod --no-debug && npm run -s db:migrate",
    "dist:admin": "cd src/AdminPanel && npm run dist -s",
    "install": "node scripts/repeka.js && node scripts/version-public.js && (composer-runner -- install && npm run -s db:migrate & cd src/AdminPanel && npm install)",
    "lint": "rm -fr var/reports/lints/*.xml && (npm run -s lint:backend & npm run -s lint:admin)",
    "lint:backend": "rm -fr var/reports/phpmd/*.xml && (npm run -s lint:backend:phpmd & npm run -s lint:backend:phpcs)",
    "lint:backend:phpcbf": "sh -c \"vendor/bin/phpcbf src/Repeka --standard=scripts/phpcs-rules.xml\" || true",
    "lint:backend:phpcs": "sh -c \"vendor/bin/phpcs src/Repeka --standard=scripts/phpcs-rules.xml --report=checkstyle --report-file=var/reports/lints/phpcs.xml\"",
    "lint:backend:phpmd": "sh -c \"vendor/bin/phpmd src/Repeka xml scripts/phpmd-rules.xml --reportfile var/reports/phpmd/phpmd.xml\"",
    "lint:admin": "cd src/AdminPanel && npm run -s lint",
    "test": "npm run -s test:backend && npm run -s test:admin",
    "test:backend": "sh -c \"vendor/bin/phpunit -c scripts/phpunit.xml\"",
    "test:backend:junit": "sh -c \"vendor/bin/phpunit -c scripts/phpunit.xml --log-junit var/reports/tests/phpunit.xml --coverage-clover var/reports/coverage/phpunit.xml\"",
    "test:admin": "cd src/AdminPanel && npm test -s",
    "test:junit": "rm -f var/reports/tests/*.xml var/reports/coverage/*.xml && (npm run -s test:backend:junit & (cd src/AdminPanel && npm run -s test:junit))",
    "watch": "npm run -s clean && cd src/AdminPanel && npm run -s watch"
  }
}
