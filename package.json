{
  "name": "repeka",
  "version": "1.0.0",
  "description": "RePeKa",
  "license": "UNLICENSED",
  "private": true,
  "devDependencies": {
    "@dpwolfe/dos2unix": "^1.1.3",
    "async": "2.4.1",
    "chalk": "1.1.3",
    "cross-env": "5.0.1",
    "del": "2.2.2",
    "fs-extra": "2.0.0",
    "git-describe": "3.0.2",
    "node-composer-runner": "0.3.0",
    "ora": "1.1.0",
    "preprocess": "3.1.0"
  },
  "scripts": {
    "help": "node scripts/help.js",
    "check": "npm run -s lint && npm run -s test",
    "build": "node scripts/version-public.js && cd src/AdminPanel && npm run -s build",
    "clean": "npm run -s clean:backend && npm run -s clean:admin",
    "clean:admin": "cd src/AdminPanel && npm run -s clean",
    "clean:backend": "npm run -s clean:backend:cache",
    "clean:backend:cache": "rm -fr var/cache/prod && rm -fr var/cache/dev && rm -fr var/cache/test",
    "clean:backend:logs": "rm -fr var/logs/*.log",
    "clean:backend:sessions": "rm -fr var/sessions/prod && rm -fr var/sessions/dev",
    "db:create": "php bin/console doctrine:database:create --if-not-exists --no-interaction",
    "db:fixture": "npm run -s clean:backend:cache && php bin/console doctrine:database:drop -e dev --force --if-exists && sleep 2 && php bin/console repeka:initialize --skip-backup -e dev && php bin/console doctrine:fixtures:load -e dev -n --append && php bin/console repeka:evaluate-display-strategies -a && npm run -s init:fts",
    "db:migrate": "npm run -s clean:backend && npm run -s db:create && php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration",
    "db:diff": "php bin/console doctrine:migrations:diff -e dev",
    "dist": "node scripts/repeka.js && node scripts/version-public.js && node scripts/assert-prod.js && (npm run dist:backend && npm run dist:admin) && php bin/console repeka:statsd:deploy",
    "dist:admin": "cd src/AdminPanel && npm run dist -s",
    "dist:backend": "composer-runner -- install --optimize-autoloader --no-dev --prefer-dist",
    "init": "npm run -s clean:backend && php bin/console repeka:initialize --skip-backup && php bin/console cache:warmup",
    "init:fts": "php bin/console repeka:fts:initialize -e dev",
    "install-deps": "npm prune && node scripts/repeka.js && node scripts/version-public.js && composer-runner -- install --prefer-dist && cd src/AdminPanel && npm install && npm run install-deps",
    "lint": "rm -fr var/reports/lints/*.xml && (npm run -s lint:backend && npm run -s lint:admin)",
    "lint:admin": "cd src/AdminPanel && npm run -s lint",
    "lint:backend": "rm -fr var/reports/phpmd/*.xml && (npm run -s lint:backend:phpmd && npm run -s lint:backend:phpcs)",
    "lint:backend:phpcbf": "sh -c \"vendor/bin/phpcbf src/Repeka --standard=scripts/phpcs-rules.xml\" || true",
    "lint:backend:phpcs": "sh -c \"vendor/bin/phpcs src/Repeka --standard=scripts/phpcs-rules.xml --report=checkstyle --report-file=var/reports/lints/phpcs.xml\"",
    "lint:backend:phpmd": "sh -c \"vendor/bin/phpmd src/Repeka xml scripts/phpmd-rules.xml --reportfile var/reports/phpmd/phpmd.xml\"",
    "publish": "curl -v --user repeka:AizoJoonoh5oidoo --upload-file ./repeka-0.8.6.tar.gz https://repo.fslab.agh.edu.pl/repository/repeka/",
    "release": "cross-env REPEKA_ENV=prod npm run -s dist && node scripts/release.js",
    "test": "npm run -s test:backend && npm run -s test:admin",
    "test:admin": "cd src/AdminPanel && npm test -s",
    "test:backend": "npm run -s test:backend:unit && npm run -s test:backend:integration",
    "test:backend:unit": "sh -c \"vendor/bin/phpunit -c scripts --testsuite unit --fail-on-warning\"",
    "test:backend:integration": "sh -c \"vendor/bin/phpunit -c scripts --testsuite integration --fail-on-warning\"",
    "test:backend:junit": "sh -c \"vendor/bin/phpunit -c scripts --testsuite unit --fail-on-warning --testdox --log-junit var/reports/tests/phpunit.xml --coverage-clover var/reports/coverage/phpunit.xml && vendor/bin/phpunit -c scripts --testsuite integration --fail-on-warning --testdox --log-junit var/reports/tests/phpunit_integration.xml && vendor/bin/phpunit -c scripts --testsuite migrations --fail-on-warning --testdox --log-junit var/reports/tests/phpunit_migrations.xml && vendor/bin/phpunit -c scripts --testsuite integration-repositories --fail-on-warning --testdox --log-junit var/reports/tests/phpunit_integration_repositories.xml && vendor/bin/phpunit -c scripts --testsuite integration-plugins --fail-on-warning --testdox --log-junit var/reports/tests/phpunit_integration_plugins.xml && vendor/bin/phpunit -c scripts --testsuite integration-fts --fail-on-warning --testdox --log-junit var/reports/tests/phpunit_integration_fts.xml\"",
    "test:junit": "rm -f var/reports/tests/*.xml var/reports/coverage/*.xml && npm run -s test:backend:junit && cd src/AdminPanel && npm run -s test:junit",
    "watch": "cd src/AdminPanel && npm run -s watch"
  }
}
