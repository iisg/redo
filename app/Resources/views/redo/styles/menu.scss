$maximum-number-of-elements: 25;
$background-color: $very-light-grey;
$submenu-z-index: 1;
$menu-item-top-and-bottom-padding: $default-gap-size / 2;
$menu-item-icon-width-and-height: 20px;
$menu-item-icon-top-and-bottom-margin: $default-gap-size / 8;
$menu-item-icon-left-and-right-margin: $default-gap-size / 4;
$negative-menu-item-height: calc(-#{2 * $menu-item-top-and-bottom-padding} - #{2 * $menu-item-icon-top-and-bottom-margin} - #{$menu-item-icon-width-and-height});
$folding-animation-duration: 4 * $default-transition-duration;
$folding-animation-timing-function: cubic-bezier(0.5, 0, 0.5, 1);

%submenu-on-the-right {
  left: 100%;
  right: auto;
}
%submenu-on-the-left {
  left: auto;
  right: 100%;
}

.site-menu {
  display: flex;
  flex-shrink: 0; // Required by Internet Explorer.
  flex-wrap: wrap-reverse;
  align-items: flex-start;
  background-color: $background-color;
  & > .menu-items {
    display: inherit;
    flex-wrap: wrap-reverse;
    flex-direction: row-reverse;
    &:not(.right-aligned) {
      & > .button-with-submenu .button-with-submenu {
        &:not(.with-submenu-on-the-left) > div:not(.dropdown-backdrop) {
          @extend %submenu-on-the-right;
        }
        &.with-submenu-on-the-left > div:not(.dropdown-backdrop) {
          @extend %submenu-on-the-left;
        }
      }
    }
    &.right-aligned {
      & > .button-with-submenu {
        &:not(.with-submenu-on-the-right) > div:not(.dropdown-backdrop) {
          right: 0;
        }
        .button-with-submenu {
          &:not(.with-submenu-on-the-right) > div:not(.dropdown-backdrop) {
            @extend %submenu-on-the-left;
          }
          &.with-submenu-on-the-right > div:not(.dropdown-backdrop) {
            @extend %submenu-on-the-right;
          }
        }
      }
    }
    & > .button-with-submenu {
      & > div:not(.dropdown-backdrop) {
        top: 100%;
      }
      .button-with-submenu > div:not(.dropdown-backdrop) {
        top: 0;
      }
    }
    @for $index from 1 to $maximum-number-of-elements {
      & > :nth-child(#{$index}) {
        order: -#{$index};
      }
    }
    a, button {
      display: flex;
      flex-grow: 1;
      align-items: center;
      justify-content: center;
      padding: $menu-item-top-and-bottom-padding 3 * $default-gap-size / 4;
      text-decoration: none;
      text-align: center;
      color: $blue;
      transition: box-shadow $default-transition-duration;
      &:hover, &:focus, &.active {
        box-shadow: inset 0 #{-$default-gap-size / 4} 0 0 $blue;
      }
      & > * {
        margin: $menu-item-icon-top-and-bottom-margin $menu-item-icon-left-and-right-margin;
      }
      .icon {
        flex-shrink: 0;
        &, & > svg {
          height: $menu-item-icon-width-and-height;
        }
      }
    }
    .button-with-submenu {
      position: relative;
      white-space: nowrap;
      &:not(.open):not(:hover) > button:focus + div,
      &:not(:hover):not(:focus-within):not([focus-within]) > div {
          visibility: hidden;
        }
        &.open > .dropdown-backdrop {
          display: none;
      }
      &:hover, &:focus-within, &[focus-within] {
        & > a, & > button {
          box-shadow: inset 0 #{-$default-gap-size / 4} 0 0 $blue;
        }
        & > div {
          display: flex;
        }
      }
      & > div:not(.dropdown-backdrop) {
        transition: none;
        z-index: $submenu-z-index;
        position: absolute;
        flex-direction: column;
        background-color: $background-color;
      }
      a, button {
        justify-content: flex-start;
      }
      button {
        width: 100%;
        background: none;
        border: none;
        outline: none;
      }
    }
  }
  & > .top-search-bar {
    display: flex;
    color: $blue;
    padding: 3 * $default-gap-size / 8 $default-gap-size / 2;
    & > * {
      background-color: white;
      transition: box-shadow $default-transition-duration;
    }
    input {
      padding: $default-gap-size / 4 3 * $default-gap-size / 4;
      border-top-left-radius: 3 * $default-gap-size / 4;
      border-bottom-left-radius: 3 * $default-gap-size / 4;
      border: none;
      outline: 0;
      &::placeholder {
        font-size: $default-font-size;
        font-style: italic;
      }
      &:focus, &.active {
        &, & + button {
          box-shadow: inset 0 #{-$default-gap-size / 4 + 1px} 0 0 $blue;
        }
      }
    }

    button {
      padding: $default-gap-size / 4 $default-gap-size / 2;
      border-top-right-radius: 3 * $default-gap-size / 4;
      border-bottom-right-radius: 3 * $default-gap-size / 4;
      &:hover, &:focus, &.active {
        box-shadow: inset #{-$default-gap-size / 4 + 1} 0 0 0 $blue;
      }
    }
  }
  & > .right-aligned {
    margin-left: auto;
    & + .right-aligned {
      margin-left: initial;
    }
  }

  @media (max-width: $maximum-screen-width-for-mobile-layout) {
    & > div {
      &.contains-submenu {
        width: 100%;
      }
      .button-with-submenu {
        width: 100%;
        & > div:not(.dropdown-backdrop) {
          position: static;
          display: flex;
          visibility: visible;
          padding-left: calc(#{$menu-item-icon-width-and-height} + #{2 * $menu-item-icon-left-and-right-margin});
          overflow: hidden;
          transition: visibility $folding-animation-duration;
          & > * {
            z-index: $submenu-z-index;
            margin-top: 0;
            background-color: $background-color;
            transition: margin-top $folding-animation-duration;
            transition-timing-function: $folding-animation-timing-function;
          }
        }
        &:not(.open):not(:hover) > button:focus + div,
        &:not(:hover):not(:focus-within):not([focus-within]) > div {
          visibility: hidden;
          & > * {
            margin-top: $negative-menu-item-height;
          }
        }
        &:not(.open):hover:not(:focus-within):not([focus-within]) > div,
        &:not(.open) > button:focus + div {
          visibility: hidden;
          & > * {
            margin-top: $negative-menu-item-height;
          }
        }
        &.open:not(:hover):not(:focus-within):not([focus-within]) > div:not(.dropdown-backdrop) {
          display: flex;
          visibility: visible;
        }
      }
    }
  }
}
