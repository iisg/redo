$fieldset-border-width: 1px;
$fieldset-legend-line-height: 1px; // Some positive value seems required to have the fieldset border hidden.
$submenu-z-index: 1;

html {
  overflow-y: scroll;
}

.main-container {
  display: flex;
  flex-direction: column;
  max-width: $main-container-maximum-width;
  min-height: 100vh;
  height: 0; // For Internet Explorer to make `flex-grow` property of child elements work correctly: https://stackoverflow.com/a/42930574 .
  margin-left: auto;
  margin-right: auto;
  font-family: "Open Sans", sans-serif;
  color: $primary-text-color;
  background-color: $primary-background-color;
  .redo-footer .creative-commons-icons-with-description > span {
    color: $secondary-text-color;
  }
}

.banner {
  width: 100%;
  height: 100%;
}

.top-panel {
  background-color: $secondary-background-color;
  border-bottom: $default-panel-bottom-border-width $default-panel-bottom-border-style $darkened-secondary-background-color;
}

h1 {
  font-size: $title-font-size;
}
h2 {
  font-size: $subtitle-font-size + 2px;
}
h3 {
  font-size: $subtitle-font-size;
}
h4 {
  font-size: $subtitle-font-size - 2px;
}
h5 {
  font-size: $subtitle-font-size - 4px;
}
h6 {
  font-size: $subtitle-font-size - 6px;
}

.no-margin-top {
  margin-top: 0 !important;
}

.no-margin-bottom {
  margin-bottom: 0 !important;
}

ul {
  margin: 0;
  padding: 0;
}

hr {
  margin: 0;
  border-top: $default-border;
}

a {
  cursor: pointer;
  color: $main-theme-color;
  transition: color $default-transition-duration;
  &:hover, &:focus, &:active {
    color: $secondary-accents-color;
  }
}

button {
  border: none;
  background: none;
  padding: 0;
}

@mixin button-colors($text-color: $accents-color, $background-color: inherit, $border-color: $default-border-color,
  $text-color-when-active: $primary-background-color, $background-color-when-active: $accents-color,
  $border-color-when-active: $accents-color,
  $text-color-when-disabled: $tertiary-text-color, $background-color-when-disabled: inherit,
  $border-color-when-disabled: $default-border-color) {
  transition-property: color, background-color, border-color;
  transition-duration: $default-transition-duration;
  &:not(:disabled):not([disabled]):not(.disabled) {
    color: $text-color;
    background-color: $background-color;
    border-color: $border-color;
    &.active, &:hover, &:focus {
      color: $text-color-when-active;
      background-color: $background-color-when-active;
      border-color: $border-color-when-active;
    }
  }
  &:disabled, &[disabled], &.disabled {
    color: $text-color-when-disabled;
    background-color: $background-color-when-disabled;
    border-color: $border-color-when-disabled;
  }
}

button.default, .default-button {
  padding: $default-gap-size / 4 $default-gap-size;
  border-width: $default-border-width;
  border-style: $default-border-style;
  border-radius: $default-gap-size / 4;
  font-weight: 600;
  &:not(.blue) {
    @include button-colors();
  }
}

button.blue, .blue-button {
  @include button-colors($primary-background-color, $accents-color, $secondary-accents-color,
    $primary-background-color, $main-theme-color, $accents-color);
}

label {
  font-weight: normal;
  margin-bottom: 0;
}

fieldset {
  padding: $default-gap-size / 2;
  border: $fieldset-border-width solid $default-border-color;
  border-radius: $default-gap-size / 4;
  & > legend {
    width: initial;
    max-width: 100%;
    height: 1em;
    margin-bottom: calc(-1em / 2);
    padding-left: $default-gap-size / 2;
    padding-right: $default-gap-size / 2;
    line-height: 1em;
    border-bottom: 0;
    font-size: $default-font-size;
    white-space: nowrap;
    color: $secondary-text-color;
    & > * {
      display: block;
      height: $default-line-height * 1em;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
    }
  }
  .formats {
    display: flex;
    justify-content: space-evenly;
    &:not(.in-one-line) {
        flex-wrap: wrap;
    }
    &.in-column {
      flex-direction: column;
      align-items: center;
    }
    & > * {
      padding: $default-gap-size / 8 $default-gap-size / 2;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
    }
  }
}

input {
  min-width: 0;
  padding: $default-gap-size / 4 $default-gap-size / 2;
  border: $default-input-border-width $default-border-style $default-border-color;
  border-radius: $default-gap-size / 4;
  outline: none; // Required by Chromium.
  background-color: $primary-background-color;
  &:focus {
    border-color: $accents-color;
  }
}

.label-with-checkbox {
  cursor: pointer;
  display: block;
  input[type=checkbox] {
    display: none;
    & + ::before {
      display: inline-block;
      width: $checkbox-and-radio-button-width-and-height;
      height: $checkbox-and-radio-button-width-and-height;
      margin-right: $checkbox-and-radio-button-right-margin;
      content: '';
      vertical-align: calc((#{$capital-letter-of-the-default-font-height} - #{$checkbox-and-radio-button-width-and-height}) / 2);
      border: $default-border-width solid $accents-color;
      border-radius: 25%;
    }
    &:checked + ::before {
      background: $accents-color;
      background: radial-gradient($accents-color 40%, transparent 40%);
    }
    & + * > * {
      display: inline-block;
      width: calc(100% - #{$checkbox-and-radio-button-width-and-height} - #{$checkbox-and-radio-button-right-margin});
      vertical-align: top;
    }
  }
}

.link-to-the-previous-page {
  align-self: flex-start;
  padding: $default-gap-size / 2 $default-gap-size / 4;
  .icon {
    margin-left: $default-gap-size / 4;
    margin-right: $default-gap-size / 4;
  }
}

#nprogress {
  div.bar {
    background: $accents-color;
    height: $default-gap-size / 4;
  }
  div.peg {
    box-shadow: 0 0 10px $accents-color, 0 0 5px $accents-color;
  }
}

.button-with-submenu {
  position: relative;
  white-space: nowrap;
  &:not(.open):not(:hover) > button:focus + div,
  &:not(:hover):not(:focus-within):not([focus-within]) > div {
    visibility: hidden;
  }
  &.open > .dropdown-backdrop {
    display: none;
  }
  &:hover, &:focus-within, &[focus-within] {
    & > div {
      display: flex;
    }
  }
  & > div:not(.dropdown-backdrop) {
    transition: none;
    z-index: $submenu-z-index;
    position: absolute;
    flex-direction: column;
  }
  a, button {
    justify-content: flex-start;
  }
}
