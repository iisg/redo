imports:
  - {resource: autodiscovery.yml}
  - {resource: aliases.yml}
  - {resource: repositories.yml}

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  Repeka\Application\Authentication\PKSoapService:
    - '%pk_auth.wsdl%'
    - '%pk_auth.options%'
  Repeka\Application\Authentication\TokenAuthenticator\LocalDatabaseAuthenticator:
    $localAccountsEnabled: '%pk_auth.local_accounts_enabled%'
  Repeka\Application\Authentication\TokenAuthenticator\ExternalServiceAuthenticator:
    $mappingConfigPath: '%user_data_mapping%'

  Repeka\Application\XmlImport\ContainerAwareXmlResourceDownloader:
    - '%xml_import.url%'

  Repeka\Application\Command\Initialization\InitializeUserMetadataCommand:
    $mappingConfigPath: '%user_data_mapping%'

  Repeka\Application\Cqrs\RepekaCommandBus:
    -
      - '@Repeka\Application\Cqrs\Middleware\MetricsCommandBusMiddleware'
      - '@Repeka\Application\Cqrs\Middleware\ValidateCommandMiddleware'
      - '@Repeka\Application\Cqrs\Middleware\WrapCommandWithTransactionMiddleware'
      - '@Repeka\Application\Cqrs\Middleware\CallCommandHandlerMiddleware'

  Repeka\Application\Elasticsearch\ESClient:
    - '%elasticsearch.host%'
    - '%elasticsearch.port%'
    - '%elasticsearch.proxy%'
  Repeka\Application\Elasticsearch\ESIndexManager:
    $indexName: '%elasticsearch.index_name%'
  Repeka\Application\Elasticsearch\Mapping\ESMappingFactory:
    $nestingDepth: '%repeka.max_nesting_depth%'
    $analyzerNames: '%elasticsearch.analyzers%'
    $metadataClasses:
      - 'Repeka\Application\Elasticsearch\Model\IntIndexedMetadata'
      - 'Repeka\Application\Elasticsearch\Model\FloatIndexedMetadata'
      - 'Repeka\Application\Elasticsearch\Model\DateTimeIndexedMetadata'
      - 'Repeka\Application\Elasticsearch\Model\RawStringIndexedMetadata'
      - 'Repeka\Application\Elasticsearch\Model\TokenizedStringIndexedMetadata'
      - 'Repeka\Application\Elasticsearch\Model\AnalyzedStringIndexedMetadata'
  Repeka\Application\Elasticsearch\Model\ESResource:
    shared: false
    arguments:
      $indexName: '%elasticsearch.index_name%'

  Repeka\Application\Entity\EntityIdGeneratorHelper: ~

  Repeka\Application\EventListener\AdminPanelMetricsRequestListener:
    arguments:
      $namesWhitelist: '%admin_panel_metrics%'
    tags:
      - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
  Repeka\Application\EventListener\CsrfRequestListener:
    tags:
      - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 0 }
      - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse, priority: 0 }
  Repeka\Application\EventListener\GlobalExceptionListener:
    arguments:
      $isDebug: '%kernel.debug%'
    tags:
      - { name: kernel.event_listener, event: kernel.exception, method: onException, priority: 1000 }
      - { name: monolog.logger, channel: exception_listener }

  Repeka\Application\EventListener\Doctrine\RelationshipPropertyConverterListener:
    tags:
      - { name: doctrine.event_listener, event: prePersist }
      - { name: doctrine.event_listener, event: preUpdate }

  Repeka\Application\EventListener\Doctrine\ResourceWorkflowDriverInjector:
    tags:
      - { name: doctrine.event_listener, event: postLoad }

  Repeka\Application\ParamConverter\ResourceContentsParamConverter:
    tags: [{ name: request.param_converter, converter: Repeka\Application\ParamConverter\ResourceContentsParamConverter }]
  Repeka\Application\ParamConverter\AssigneeMetadataParamConverter:
    tags: [{ name: request.param_converter, converter: Repeka\Application\ParamConverter\AssigneeMetadataParamConverter }]
  Repeka\Application\ParamConverter\MetadataValueProcessor\MetadataValueProcessor:
    public: true

  Repeka\Application\Resources\FrontendLocaleProvider:
    $defaultUiLanguage: '%repeka.default_ui_language%'

  Repeka\Application\Upload\FilesystemDriver: ~
  Repeka\Application\Upload\BasicResourceFileHelper: ~
  Repeka\Application\Upload\ResourceFilePathGenerator:
    - '%repeka.upload.path%'
    - '%repeka.upload.temp_folder%'

  Repeka\Application\Validation\ContainerAwareMetadataConstraintManager: ~
  Repeka\Domain\Validation\Rules\ResourceClassExistsRule:
    $resourceClasses: '%repeka.resource_classes%'

  Monolog\Formatter\LineFormatter: [~, ~, true]
  Qandidate\Common\Symfony\HttpKernel\EventListener\JsonRequestTransformerListener:
    tags: [{ name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 100 }]
