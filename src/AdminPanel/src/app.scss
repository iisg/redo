@import "common/styles";
@import "../jspm_packages/npm/compass-mixins@0.12.10/lib/animation/animate/fading";
@import '../jspm_packages/npm/sweetalert2@6.11.5/dist/sweetalert2.css';

$admin-content-z-index-when-sidebar-is-collapsed: 0;
$floating-form-and-sticky-table-header-z-index: $admin-content-z-index-when-sidebar-is-collapsed + 1;
$top-bar-z-index: $floating-form-and-sticky-table-header-z-index + 1;
$sticky-button-z-index: $top-bar-z-index;
$collapsed-sidebar-elements-z-index-on-hover: $top-bar-z-index + 1;

$admin-content-left-border-width: $default-gap-size / 4;

$simple-form-text-input-box-minimum-width: 100px;
$simple-form-number-input-box-minimum-width: 75px;

$list-group-item-background-color: white;
$well-background-color: $very-light-grey;

$maximum-column-number: 999;

body {
  font-family: 'Open Sans', sans-serif;
  color: $default-text-color;
}

.repeka-admin-panel {
  overflow: hidden;

  sidebar.collapsed {
    .with-overflow-scrollbar-on-the-left > * > * > * {
      z-index: $admin-content-z-index-when-sidebar-is-collapsed;
      position: relative;
      &:hover {
        z-index: $collapsed-sidebar-elements-z-index-on-hover;
      }
    }
    & + .admin-content {
      z-index: $admin-content-z-index-when-sidebar-is-collapsed;
    }
  }

  .admin-content {
    display: flex;
    flex-direction: column;
    flex: 1;
    overflow: hidden;
    border-left: $lightish-grey solid $admin-content-left-border-width;
    top-bar {
      z-index: $top-bar-z-index;
    }
    & > router-view {
      display: flex;
      flex-direction: column;
      flex: 1;
      background-color: white;
      overflow: hidden;
      & > * {
        height: 100%;
        &:not(.resource-details):not(.metadata-details):not(.resource-kind-details):not(.audit-page) {
          overflow: auto;
        }
        &:not(.about-the-application) > redo-footer {
          padding-top: $default-gap-size;
        }
      }
    }
  }

  .view-with-tabs {
    display: flex;
    flex-direction: column;
    .name-with-buttons-and-tabs {
      z-index: $top-bar-z-index;
      display: flex;
      flex-shrink: 0;
      align-items: center;
      flex-wrap: wrap;
      padding-top: $default-gap-size / 4;
      padding-bottom: $default-gap-size / 4;
      background-color: $default-background-color;
      border-bottom: $default-gap-size / 4 solid $light-blue;
      overflow: auto;
      & > :not(.buttons):not(aup-tabs) {
        margin: $default-gap-size / 4 $default-gap-size / 2;
      }
      & > .buttons {
        display: flex;
        flex-wrap: wrap;
        padding-left: $default-gap-size / 4;
        padding-right: $default-gap-size / 4;
        & > * {
          margin: $default-gap-size / 4;
        }
      }
      aup-tabs {
        align-self: flex-end;
        margin-top: $default-gap-size / 4;
        margin-bottom: - $default-gap-size / 4;
        margin-left: auto;
        padding-left: $default-gap-size / 2;
        & > ul {
          border: none;
          & > li {
            margin-bottom: 0;
            & > a {
              margin-right: 0;
              padding: $default-gap-size / 8 $default-gap-size / 2;
              border: 0;
              border-radius: 0;
              text-transform: uppercase;
              color: $default-text-color;
              @include transition(background-color $default-transition-duration ease-out, color $default-transition-duration ease-out);
              &.active, &:hover {
                background-color: $light-blue;
                color: white;
              }
              &.active {
                font-style: normal;
              }
            }
          }
        }
      }
    }
  }

  metadata-list, resource-kinds-list, workflows-list, .languages-list, audit, statistics-view {
    display: flex;
    flex-direction: column;
    & > :not(table):not(.table-container):not(.add-form):not(.with-sticky-buttons) {
      position: sticky;
      left: 0;
    }
  }
  metadata-list, resource-kinds-list, workflows-list, .languages-list {
    & > add-button {
      display: flex;
      justify-content: flex-end;
      flex-shrink: 0;
    }
  }
  resources-list, metadata-list, resource-kinds-list {
    & > .add-form {
      flex-shrink: 0;
    }
  }

  metadata-list, resource-kinds-list, workflows-list, .languages-list {
    & > add-button {
      padding: $default-gap-size / 2;
    }
  }

  .add-form {
    align-self: flex-start;
    flex-shrink: 0;
    min-width: 100%;
    & > span {
      display: block;
      padding: $default-gap-size / 2;
      @extend .page-title;
    }
    resource-kind-form {
      .list-group-item {
        background-color: $well-background-color;
      }
      .well {
        background-color: $list-group-item-background-color;
      }
    }
  }

  .well {
    padding: $default-gap-size / 2;
    margin-bottom: 0;
    &:not(.list-group-item):not(.floating-form) {
      border-radius: 0;
    }
    &.list-group-item {
      &:not(:first-child) {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }
      &:not(:last-child) {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
    &.floating-form {
      z-index: $floating-form-and-sticky-table-header-z-index;
      position: absolute;
      right: 0;
      border-top-right-radius: 0;
    }
  }

  .alert {
    margin-bottom: 0;
    padding: $default-gap-size;
    border: none;
    border-radius: 0;
    &.alert-info {
      background-color: $light-blue;
      color: white;
    }
    &.alert-warning {
      background-color: darken($orange, 10%);
      border-color: $orange;
      color: white;
    }
  }
}

.repeka-admin-panel, ux-dialog-container, .swal2-container {
  .page-title {
    display: block;
    font-size: $title-font-size;
    font-weight: bold;
  }

  .page-subtitle {
    display: block;
    font-size: $subtitle-font-size;
  }

  h1, h2, h3, h4, h5, h6 {
    margin-top: 0;
  }
  h1, h2, h3, h4, h5, h6, p {
    margin-bottom: 0;
  }
  h1 {
    font-size: $title-font-size;
  }
  h2 {
    font-size: $subtitle-font-size + 1px;
  }
  h3 {
    font-size: $subtitle-font-size;
  }
  h4 {
    font-size: $default-font-size + 1px;
  }
  h5 {
    font-size: $default-font-size - 1px;
  }
  h6 {
    font-size: $default-font-size - 2px;
  }

  a {
    cursor: pointer;
    color: $blue;
    &:focus, &:hover {
      color: $light-blue;
    }
  }

  dl {
    margin-top: 0;
    margin-bottom: 0;
  }

  ul {
    margin-bottom: 0;
  }

  label {
    margin-bottom: 0;
    font-weight: normal;
  }

  .tooltip, .white-space-pre-wrap {
    white-space: pre-wrap;
  }

  .help-block {
    margin-top: 0;
    margin-bottom: 0;
    color: $grey;
  }

  .validation-message {
    color: $red;
  }

  table {
    width: 100%;
    &:not(.transparent):not(.table-condensed) {
      thead th, tfoot td {
        position: sticky;
        font-weight: normal;
        background-color: $grey;
        color: white;
      }
      thead th {
        z-index: 1;
        top: 0;
      }
      tbody {
        vertical-align: top;
        tr {
          @include transition(background-color $default-transition-duration);
          &:nth-child(2n + 1) {
            background-color: $light-grey;
          }
          &:not(.edit-form):hover {
            background-color: $orange;
          }
          a {
            color: $default-text-color;
          }
        }
      }
      tfoot td {
        bottom: 0;
      }
      th, td {
        @include regular-table-cell();
      }
    }
    &.transparent {
      background: none;
    }
    &.table-condensed { // Appears in the datepicker.
      td.active, td.active:hover, td span.active {
        background-color: $blue;
      }
      td.today:before {
        border-bottom-color: $blue;
      }
    }
  }

  hr {
    margin-top: $default-gap-size / 2;
    margin-bottom: $default-gap-size / 2;
    border-top: 1px solid $light-grey;
  }

  input, textarea, select {
    &[disabled] {
      color: $lightish-grey;
    }
  }

  input[type=checkbox], input[type=radio] {
    margin-top: 0;
  }

  textarea {
    resize: vertical;
  }

  .input-group .form-control {
    z-index: auto;
  }

  .form-control:not([type=date]) {
    height: initial;
  }

  .list-group-item {
    padding: $default-gap-size / 2;
  }

  .form-group {
    margin-bottom: 0;
    padding-top: $default-gap-size / 2;
    padding-bottom: $default-gap-size / 2;
  }
}

.drag-handle {
  cursor: ns-resize;
  color: $blue;
  @include transition(color $default-transition-duration);
  &:hover, &:focus {
    color: $light-blue;
  }
  icon {
    pointer-events: none; // To make `allowed-drag-selector` work.
  }
}

button {
  border: none;
  outline: none;
  background: none;
  padding: 0;
}

.simple-form {
  display: grid;

  &:not(.multiple-columns) {
    grid-template-columns: fit-content(calc(100% / 3)) auto; // It is solved this way as otherwise, for example, edit button would not stick to the
    // right side while scrolling horizontally when there would be a lot content in the first
    // column and the window would be narrow.
    grid-column-gap: $simple-form-column-gap-size;
  }
  &.multiple-columns {
    grid-template-columns: fit-content(calc(100% / 3)) repeat($maximum-column-number, auto);
    & > :not(collapsible-metadata-group), & > collapsible-metadata-group > * {
      margin-left: $simple-form-column-gap-size / 2;
      margin-right: $simple-form-column-gap-size / 2;
    }
  }

  &:not(.contains-collapsible-metadata-group) {
    grid-row-gap: $simple-form-row-gap-size;
  }
  &.contains-collapsible-metadata-group {
    margin-top: -$simple-form-row-gap-size / 2;
    margin-bottom: -$simple-form-row-gap-size / 2;
    & > :not(collapsible-metadata-group), & > collapsible-metadata-group > * {
      margin-top: $simple-form-row-gap-size / 2;
      margin-bottom: $simple-form-row-gap-size / 2;
    }
  }

  &, & > collapsible-metadata-group {
    & > span:not(.value):not(.validation-message), & > button, & > .key {
      font-weight: bold;
      grid-column-start: 1;
      .help-block {
        font-weight: normal;
      }
    }
    & > span, & > .key {
      icon {
        margin-left: $default-gap-size / 4;
      }
    }
    & > .full-width, & > .section-title, & > .validation-message, & > hr {
      grid-column: 1/-1;
    }
    & > hr {
      width: 100%;
    }
    & > .section-title {
      font-size: $subtitle-font-size;
    }
  }
  &:not(:last-child) > .validation-message {
    margin-bottom: $default-gap-size / 2;
  }
  input[type=text]:not(.datetimepicker-input), dropdown-select, metadata-chooser {
    min-width: $simple-form-text-input-box-minimum-width;
  }
  input[type=number] {
    min-width: $simple-form-number-input-box-minimum-width;
    &:not(:first-child) {
      flex: 1;
      margin-left: $default-gap-size / 2;
    }
  }
  hr {
    margin-top: 0;
    margin-bottom: 0;
  }
}

.narrow-form {
  & > span {
    display: block;
    padding: $default-gap-size / 4;
    font-weight: bold;
  }
  & > div {
    &, & > * {
      padding: $default-gap-size / 8;
    }
    & > :not(.simple-form) {
      display: block;
    }
    & > span {
      &:not(.value):not(.additional-information) {
        font-weight: bold;
      }
    }
  }
}

.with-sticky-buttons, .with-sticky-button, .form-with-sticky-buttons form {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
}

.with-sticky-buttons, .form-with-sticky-buttons form {
  padding-top: $default-gap-size / 4;
  padding-bottom: $default-gap-size / 4;
  & > .content {
    flex: 1;
    padding: $default-gap-size / 4 $default-gap-size / 2;
  }
  & > .sticky-buttons {
    position: sticky;
    display: flex;
    flex-direction: column;
    flex: 0;
    top: $default-gap-size * 3 / 4;
    margin-left: auto;
    padding-left: $default-gap-size / 4;
    padding-right: $default-gap-size / 4;
    & > * {
      padding: $default-gap-size / 4;
    }
    & > * {
      white-space: nowrap;
    }
    button, toggle-button {
      width: 100%;
    }
    button, toggle-button > div {
      text-align: left;
    }
  }
}

.with-sticky-button {
  flex-direction: row-reverse;
  & > .content {
    flex: 1;
    max-width: 100%;
    padding: $default-gap-size / 2;
  }
  & > .sticky-button {
    z-index: $sticky-button-z-index; // To prevent `collapsible-metadata-group` button from being displayed on top of this one.
    position: sticky;
    order: -1;
    top: $default-gap-size;
    right: $default-gap-size; // It works in Firefox, but not in Chromium.
    margin: $default-gap-size / 2;
  }
}

.swal2-container.swal2-fade {
  transition: background-color $default-transition-duration;
}

// Animations.
// See: http://blog.aurelia.io/2015/07/17/animating-apps-with-aurelia-part-1.
.fade-inup-outdown {
  &.au-enter {
    opacity: 0 !important;
  }
  &.au-enter-active {
    @include animation(fadeInDown $default-transition-duration);
  }
  &.au-leave-active {
    @include animation(fadeOutUp $default-transition-duration);
  }
}

.fade-inup-outup {
  &.au-enter {
    opacity: 0 !important;
  }
  &.au-enter-active {
    @include animation(fadeInUp $default-transition-duration);
  }
  &.au-leave-active {
    @include animation(fadeOutUp $default-transition-duration);
  }
}

// max-height animation, idea based on: http://stackoverflow.com/a/8331169/878514
@mixin anim-height-inout($max-height) {
  @include keyframes(heightIn#{$max-height}) {
    0% {
      max-height: 0;
    }
    100% {
      max-height: $max-height * 1px;
    }
  }

  @include keyframes(heightOut#{$max-height}) {
    0% {
      max-height: $max-height * 1px;
    }
    100% {
      max-height: 0;
    }
  }

  .anim-height-inout-#{$max-height} {
    &.au-enter-active {
      overflow: hidden;
      @include animation(heightIn#{$max-height} $default-transition-duration);
    }
    &.au-leave-active {
      overflow: hidden;
      @include animation(heightOut#{$max-height} $default-transition-duration);
    }
  }
}

@include anim-height-inout(15);
@include anim-height-inout(36);
@include anim-height-inout(150);
@include anim-height-inout(600);
@include anim-height-inout(900);
